version: '3.8'

services:
  backend-prod:
    image: rr-back:0.0.1
    build:
      context: ./symfony
      dockerfile: ../docker/back/Dockerfile-backend
    volumes:
      - ./symfony:/var/www/html
      - ./docker/back/init-script.sh:/usr/local/bin/init-script.sh
    ports:
      - "9600:9000"  # Port pour PHP-FPM
    depends_on:
      - db-prod
    environment:
      APP_ENV: ${APP_ENV}
      APP_SECRET: ${APP_SECRET}
      APP_DEBUG: ${APP_DEBUG}
      DATABASE_URL: ${DATABASE_URL}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
      JWT_PASSPHRASE: ${JWT_PASSPHRASE}
      SECRET_KEY_TOKEN: ${SECRET_KEY_TOKEN}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_API_URL: ${OPENAI_API_URL}
      OPENAI_MODEL_NAME: ${OPENAI_MODEL_NAME}
      MAILER_DSN: ${MAILER_DSN}
      STRIPE_API_KEY: ${STRIPE_API_KEY}
      STRIPE_SECRET: ${STRIPE_SECRET}
      STRIPE_LINK_DASHBOARD: ${STRIPE_LINK_DASHBOARD}
      BACK_URL: ${BACK_URL}
      FRONT_URL: ${FRONT_URL}
      APP_NAME: ${APP_NAME}
    networks:
      - internal

  db-prod:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - internal

  nginx-prod:
    image: nginx:latest
    volumes:
      - ./symfony:/var/www/html
      - ./docker/back/default-nginx-prod.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend-prod
    networks:
      - internal

  front-prod:
    image: rr-front:0.0.1
    build:
      context: ./front
      dockerfile: ../docker/front/Dockerfile-prod
    env_file:
      - front/.env
    volumes:
      - ./front:/usr/src/app
      - ./docker/back/default-prod.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend-prod
    labels:
      - traefik.enable=true
      - traefik.http.routers.rr.rule=Host(${HOST})
      - traefik.http.routers.rr.entrypoints=websecure
      - traefik.http.routers.rr.tls.certresolver=rr
      - traefik.http.routers.rr-http.rule=Host(${HOST})
      - traefik.http.routers.rr-http.entrypoints=web
      - traefik.http.routers.rr-http.middlewares=rr-https-redirect
      - traefik.http.middlewares.rr-https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.rr-https-redirect.redirectscheme.permanent=true
    networks:
      - traefik_web
      - internal

volumes:
  pg-data:

networks:
  traefik_web:
    external: true
  internal: